{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import\"./App.css\";import NavBar from\"./NavBar/NavBar.js\";import Boost from\"./Boost.js\";import Main from\"./Main.js\";import Task from\"./Task.js\";import RefLink from\"./RefLink.js\";import{BrowserRouter as Router,Routes,Route,useNavigate}from\"react-router-dom\";import axios from\"axios\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const tg=window.Telegram.WebApp;const userId=tg.initDataUnsafe.user.id;const[count,setCount]=useState(()=>{const savedCount=localStorage.getItem(\"count\");return savedCount!==null?parseInt(savedCount,1000):0;});const[countBonus,setCountBonus]=useState(()=>{const savedCountBonus=localStorage.getItem(\"countBonus\");return savedCountBonus!==null?parseInt(savedCountBonus,10):1;});const[countTrueMax,setcountTrueMax]=useState(()=>{const savedcountTrueMax=localStorage.getItem(\"countTrueMax\");return savedcountTrueMax!==null?parseInt(savedcountTrueMax,1000):1000;});const[levelMoreClicks,setLevelMoreClicks]=useState(()=>{const savedLevelMoreClicks=localStorage.getItem(\"levelMoreClicks\");return savedLevelMoreClicks!==null?parseInt(savedLevelMoreClicks,10):0;});const[levelMoreEnergy,setLevelMoreEnergy]=useState(()=>{const savedLevelMoreEnergy=localStorage.getItem(\"levelMoreEnergy\");return savedLevelMoreEnergy!==null?parseInt(savedLevelMoreEnergy,10):0;});const[levelTgChannel1,setLevelTgChannel1]=useState(()=>{const savedLevelTgChannel1=localStorage.getItem(\"levelTgChannel1\");return savedLevelTgChannel1!==null?parseInt(savedLevelTgChannel1,10):0;});const[levelTgPremium,setlevelTgPremium]=useState(()=>{const savedLevelTgPremium=localStorage.getItem(\"levelTgPremium\");return savedLevelTgPremium!==null?parseInt(savedLevelTgPremium,10):0;});const[countTrue,setCountTrue]=useState(()=>{const savedCountTrue=localStorage.getItem(\"countTrue\");const lastUpdateTime=localStorage.getItem(\"lastUpdateTime\");if(savedCountTrue!==null&&lastUpdateTime!==null&&Date.now()-parseInt(lastUpdateTime,10)<24*60*60*1000){return Math.max(parseInt(savedCountTrue,10),0);}else{return countTrueMax;}});const[timer,setTimer]=useState(300);const[canClick,setCanClick]=useState(true);useEffect(()=>{localStorage.setItem(\"count\",count.toString());localStorage.setItem(\"countTrue\",countTrue.toString());localStorage.setItem(\"lastUpdateTime\",Date.now().toString());const interval=setInterval(()=>{setTimer(prevTimer=>{if(prevTimer>0){return prevTimer-1;}else{setCountTrue(prevCountTrue=>Math.min(prevCountTrue+1,canClick));return countTrueMax;// Reset timer to 10\n}});},1000);return()=>clearInterval(interval);},[count,countTrue]);const handleClick=()=>{if(canClick){setCount(count+countBonus);if(true){const hapticFeedbackLight=tg.HapticFeedback.impactOccurred(\"light\");}if(countTrue>0){setCountTrue(Math.max(countTrue-1,0));}setCanClick(false);setTimeout(()=>{setCanClick(true);},10000);}};useEffect(()=>{if(countTrue===0){const HapticFeedbackError=tg.HapticFeedback.notificationOccurred(\"warning\");alert(\"Scrooge is tired... 😴\");}},[countTrue]);const[loading,setLoading]=useState(true);useEffect(()=>{// Имитация загрузки данных (можете заменить этот setTimeout на реальную логику загрузки)\nsetTimeout(()=>{setLoading(false);// После завершения загрузки устанавливаем loading в false\n},3000);// Пример: имитация загрузки в течение 3 секунд\n// Здесь можно добавить логику для загрузки данных с сервера или другие операции\n},[]);//Boosts\nconst priceMoreClicks=1;const moreClicks=()=>{const hapticFeedbackSoft=tg.HapticFeedback.impactOccurred(\"soft\");if(levelMoreClicks===10){alert(\"Max level 🔝\");}else{if(window.confirm(\"Here you can buy more clicks in one click 🤑.\\nBuy it?\")){if(count>=priceMoreClicks){setCount(count-priceMoreClicks);setCountBonus(countBonus*2);setLevelMoreClicks(levelMoreClicks+1);alert(\"Thanks for the purchase ✅\");}else{alert(\"Insufficient funds ❌\");}}}};const priceMoreEnergy=10;const moreEnergy=()=>{const hapticFeedbackSoft=tg.HapticFeedback.impactOccurred(\"soft\");if(levelMoreEnergy===7){alert(\"Max level 🔝\");}else{if(window.confirm(\"Here you can buy more energy.\\nBuy it?\")){if(count>=priceMoreEnergy){setCount(count-priceMoreEnergy);setCountTrue(countTrue+1000);setcountTrueMax(countTrueMax+1000);setLevelMoreEnergy(levelMoreEnergy+1);alert(\"Thanks for the purchase ✅\");}else{alert(\"Insufficient funds ❌\");}}}};//Tasks\nconst TgPremium=()=>{const hapticFeedbackSoft=tg.HapticFeedback.impactOccurred(\"soft\");if(levelTgPremium===1){alert(\"You have already completed this task ✅\");}else{if(window.confirm(\"If you have Telegram premium you get +1000 coins.\\nTo execute?\")){if(tg.initDataUnsafe.user.isPremium){setCount(count+1000);setlevelTgPremium(levelTgPremium+1);alert(\"Yoooo!\\nCongratulations on buying TG Premium! ⭐️\");}else{alert(\"Sorry, but you don't have tg premium 😔\");}}}};const TgChannel1=()=>{const hapticFeedbackSoft=tg.HapticFeedback.impactOccurred(\"soft\");const[isSubscribed,setIsSubscribed]=useState(false);const navigate=useNavigate();if(levelTgChannel1===1){alert(\"You have already completed this task ✅\");}else{const checkSubsciption=async()=>{try{//endpoint api\nconst response=await axios.get(\"https://api.server.com/check-sub\");if(response.data.subscribed){setIsSubscribed(true);const currentCount=parseInt(localStorage.getItem(\"count\"),10)||0;localStorage.setItem(\"count\",currentCount+20000);alert(\"спасибо за выполнения задания, нам важно ваше присутствие с нами\");setLevelTgChannel1(levelMoreEnergy+1);}else{if(window.confirm(\"Subscribe to the telegram channel and get +20,000 coins. To execute?\")){//выполнение задания\nconst handleSubscribe=()=>{tg.openTelegramLink(\"https://t.me/deanon_team_blog\",\"_blank\");//ссылка на тгк\n};}}}catch(error){console.error(\"watafak\",error);}};}};return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:loading?/*#__PURE__*/_jsxs(\"div\",{className:\"Loading-page\",children:[/*#__PURE__*/_jsxs(\"h1\",{className:\"title\",children:[\"Welcome\",/*#__PURE__*/_jsx(\"br\",{}),\"Quack Coin!\"]}),/*#__PURE__*/_jsx(\"img\",{className:\"loading-wheel\",src:\"https://printhiegprog.github.io/loading-wheel.png\",alt:\"loading-wheel\"}),/*#__PURE__*/_jsx(\"div\",{className:\"contact\"})]}):/*#__PURE__*/_jsxs(Router,{children:[/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",element:/*#__PURE__*/_jsx(Main,{count:count,handleClick:handleClick,countTrue:countTrue,canClick:canClick})}),/*#__PURE__*/_jsx(Route,{path:\"/boost\",element:/*#__PURE__*/_jsx(Boost,{count:count,moreClicks:moreClicks,priceMoreClicks:priceMoreClicks,levelMoreClicks:levelMoreClicks,moreEnergy:moreEnergy,priceMoreEnergy:priceMoreEnergy,levelMoreEnergy:levelMoreEnergy})}),/*#__PURE__*/_jsx(Route,{path:\"/task\",element:/*#__PURE__*/_jsx(Task,{TgPremium:TgPremium,TgChannel1:TgChannel1})}),/*#__PURE__*/_jsx(Route,{path:\"/link\",element:/*#__PURE__*/_jsx(RefLink,{userId:userId})})]}),/*#__PURE__*/_jsx(NavBar,{})]})});}export default App;","map":{"version":3,"names":["React","useEffect","useState","NavBar","Boost","Main","Task","RefLink","BrowserRouter","Router","Routes","Route","useNavigate","axios","jsx","_jsx","jsxs","_jsxs","App","tg","window","Telegram","WebApp","userId","initDataUnsafe","user","id","count","setCount","savedCount","localStorage","getItem","parseInt","countBonus","setCountBonus","savedCountBonus","countTrueMax","setcountTrueMax","savedcountTrueMax","levelMoreClicks","setLevelMoreClicks","savedLevelMoreClicks","levelMoreEnergy","setLevelMoreEnergy","savedLevelMoreEnergy","levelTgChannel1","setLevelTgChannel1","savedLevelTgChannel1","levelTgPremium","setlevelTgPremium","savedLevelTgPremium","countTrue","setCountTrue","savedCountTrue","lastUpdateTime","Date","now","Math","max","timer","setTimer","canClick","setCanClick","setItem","toString","interval","setInterval","prevTimer","prevCountTrue","min","clearInterval","handleClick","hapticFeedbackLight","HapticFeedback","impactOccurred","setTimeout","HapticFeedbackError","notificationOccurred","alert","loading","setLoading","priceMoreClicks","moreClicks","hapticFeedbackSoft","confirm","priceMoreEnergy","moreEnergy","TgPremium","isPremium","TgChannel1","isSubscribed","setIsSubscribed","navigate","checkSubsciption","response","get","data","subscribed","currentCount","handleSubscribe","openTelegramLink","error","console","className","children","src","alt","exact","path","element"],"sources":["/Users/egorkobzev/quick-coin/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport NavBar from \"./NavBar/NavBar.js\";\nimport Boost from \"./Boost.js\";\nimport Main from \"./Main.js\";\nimport Task from \"./Task.js\";\nimport RefLink from \"./RefLink.js\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  useNavigate,\n} from \"react-router-dom\";\nimport axios from \"axios\";\n\nfunction App() {\n  const tg = window.Telegram.WebApp;\n  const userId = tg.initDataUnsafe.user.id;\n\n  const [count, setCount] = useState(() => {\n    const savedCount = localStorage.getItem(\"count\");\n    return savedCount !== null ? parseInt(savedCount, 1000) : 0;\n  });\n  const [countBonus, setCountBonus] = useState(() => {\n    const savedCountBonus = localStorage.getItem(\"countBonus\");\n    return savedCountBonus !== null ? parseInt(savedCountBonus, 10) : 1;\n  });\n  const [countTrueMax, setcountTrueMax] = useState(() => {\n    const savedcountTrueMax = localStorage.getItem(\"countTrueMax\");\n    return savedcountTrueMax !== null ? parseInt(savedcountTrueMax, 1000) : 1000;\n  });\n  const [levelMoreClicks, setLevelMoreClicks] = useState(() => {\n    const savedLevelMoreClicks = localStorage.getItem(\"levelMoreClicks\");\n    return savedLevelMoreClicks !== null\n      ? parseInt(savedLevelMoreClicks, 10)\n      : 0;\n  });\n  const [levelMoreEnergy, setLevelMoreEnergy] = useState(() => {\n    const savedLevelMoreEnergy = localStorage.getItem(\"levelMoreEnergy\");\n    return savedLevelMoreEnergy !== null\n      ? parseInt(savedLevelMoreEnergy, 10)\n      : 0;\n  });\n  const [levelTgChannel1, setLevelTgChannel1] = useState(() => {\n    const savedLevelTgChannel1 = localStorage.getItem(\"levelTgChannel1\");\n    return savedLevelTgChannel1 !== null\n      ? parseInt(savedLevelTgChannel1, 10)\n      : 0;\n  });\n  const [levelTgPremium, setlevelTgPremium] = useState(() => {\n    const savedLevelTgPremium = localStorage.getItem(\"levelTgPremium\");\n    return savedLevelTgPremium !== null ? parseInt(savedLevelTgPremium, 10) : 0;\n  });\n  const [countTrue, setCountTrue] = useState(() => {\n    const savedCountTrue = localStorage.getItem(\"countTrue\");\n    const lastUpdateTime = localStorage.getItem(\"lastUpdateTime\");\n\n    if (\n      savedCountTrue !== null &&\n      lastUpdateTime !== null &&\n      Date.now() - parseInt(lastUpdateTime, 10) < 24 * 60 * 60 * 1000\n    ) {\n      return Math.max(parseInt(savedCountTrue, 10), 0);\n    } else {\n      return countTrueMax;\n    }\n  });\n\n  const [timer, setTimer] = useState(300);\n  const [canClick, setCanClick] = useState(true);\n\n  useEffect(() => {\n    localStorage.setItem(\"count\", count.toString());\n    localStorage.setItem(\"countTrue\", countTrue.toString());\n    localStorage.setItem(\"lastUpdateTime\", Date.now().toString());\n\n    const interval = setInterval(() => {\n      setTimer((prevTimer) => {\n        if (prevTimer > 0) {\n          return prevTimer - 1;\n        } else {\n          setCountTrue((prevCountTrue) =>\n            Math.min(prevCountTrue + 1, canClick)\n          );\n          return countTrueMax; // Reset timer to 10\n        }\n      });\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, [count, countTrue]);\n\n  const handleClick = () => {\n    if (canClick) {\n      setCount(count + countBonus);\n      if (true) {\n        const hapticFeedbackLight = tg.HapticFeedback.impactOccurred(\"light\");\n      }\n\n      if (countTrue > 0) {\n        setCountTrue(Math.max(countTrue - 1, 0));\n      }\n\n      setCanClick(false);\n      setTimeout(() => {\n        setCanClick(true);\n      }, 10000);\n    }\n  };\n\n  useEffect(() => {\n    if (countTrue === 0) {\n      const HapticFeedbackError =\n        tg.HapticFeedback.notificationOccurred(\"warning\");\n      alert(\"Scrooge is tired... 😴\");\n    }\n  }, [countTrue]);\n\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Имитация загрузки данных (можете заменить этот setTimeout на реальную логику загрузки)\n    setTimeout(() => {\n      setLoading(false); // После завершения загрузки устанавливаем loading в false\n    }, 3000); // Пример: имитация загрузки в течение 3 секунд\n\n    // Здесь можно добавить логику для загрузки данных с сервера или другие операции\n  }, []);\n\n  //Boosts\n  const priceMoreClicks = 1;\n  const moreClicks = () => {\n    const hapticFeedbackSoft = tg.HapticFeedback.impactOccurred(\"soft\");\n    if (levelMoreClicks === 10) {\n      alert(\"Max level 🔝\");\n    } else {\n      if (\n        window.confirm(\"Here you can buy more clicks in one click 🤑.\\nBuy it?\")\n      ) {\n        if (count >= priceMoreClicks) {\n          setCount(count - priceMoreClicks);\n          setCountBonus(countBonus * 2);\n          setLevelMoreClicks(levelMoreClicks + 1);\n          alert(\"Thanks for the purchase ✅\");\n        } else {\n          alert(\"Insufficient funds ❌\");\n        }\n      }\n    }\n  };\n\n  const priceMoreEnergy = 10;\n  const moreEnergy = () => {\n    const hapticFeedbackSoft = tg.HapticFeedback.impactOccurred(\"soft\");\n    if (levelMoreEnergy === 7) {\n      alert(\"Max level 🔝\");\n    } else {\n      if (window.confirm(\"Here you can buy more energy.\\nBuy it?\")) {\n        if (count >= priceMoreEnergy) {\n          setCount(count - priceMoreEnergy);\n          setCountTrue(countTrue + 1000);\n          setcountTrueMax(countTrueMax + 1000);\n          setLevelMoreEnergy(levelMoreEnergy + 1);\n          alert(\"Thanks for the purchase ✅\");\n        } else {\n          alert(\"Insufficient funds ❌\");\n        }\n      }\n    }\n  };\n\n  //Tasks\n  const TgPremium = () => {\n    const hapticFeedbackSoft = tg.HapticFeedback.impactOccurred(\"soft\");\n    if (levelTgPremium === 1) {\n      alert(\"You have already completed this task ✅\");\n    } else {\n      if (\n        window.confirm(\n          \"If you have Telegram premium you get +1000 coins.\\nTo execute?\"\n        )\n      ) {\n        if (tg.initDataUnsafe.user.isPremium) {\n          setCount(count + 1000);\n          setlevelTgPremium(levelTgPremium + 1);\n          alert(\"Yoooo!\\nCongratulations on buying TG Premium! ⭐️\");\n        } else {\n          alert(\"Sorry, but you don't have tg premium 😔\");\n        }\n      }\n    }\n  };\n\n  const TgChannel1 = () => {\n    const hapticFeedbackSoft = tg.HapticFeedback.impactOccurred(\"soft\");\n    const [isSubscribed, setIsSubscribed] = useState(false);\n    const navigate = useNavigate();\n    if (levelTgChannel1 === 1) {\n      alert(\"You have already completed this task ✅\");\n    } else {\n      const checkSubsciption = async () => {\n        try {\n          //endpoint api\n\n          const response = await axios.get(\"https://api.server.com/check-sub\");\n          if (response.data.subscribed) {\n            setIsSubscribed(true);\n\n            const currentCount =\n              parseInt(localStorage.getItem(\"count\"), 10) || 0;\n\n            localStorage.setItem(\"count\", currentCount + 20000);\n            alert(\n              \"спасибо за выполнения задания, нам важно ваше присутствие с нами\"\n            );\n            setLevelTgChannel1(levelMoreEnergy + 1);\n          } else {\n            if (\n              window.confirm(\n                \"Subscribe to the telegram channel and get +20,000 coins. To execute?\"\n              )\n            ) {\n              //выполнение задания\n\n              const handleSubscribe = () => {\n                tg.openTelegramLink(\"https://t.me/deanon_team_blog\", \"_blank\"); //ссылка на тгк\n              };\n            }\n          }\n        } catch (error) {\n          console.error(\"watafak\", error);\n        }\n      };\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {loading ? (\n        <div className=\"Loading-page\">\n          <h1 className=\"title\">\n            Welcome\n            <br />\n            Quack Coin!\n          </h1>\n          <img\n            className=\"loading-wheel\"\n            src=\"https://printhiegprog.github.io/loading-wheel.png\"\n            alt=\"loading-wheel\"\n          />\n          <div className=\"contact\"></div>\n        </div>\n      ) : (\n        <Router>\n          <Routes>\n            <Route\n              exact\n              path=\"/\"\n              element={\n                <Main\n                  count={count}\n                  handleClick={handleClick}\n                  countTrue={countTrue}\n                  canClick={canClick}\n                />\n              }\n            />\n            <Route\n              path=\"/boost\"\n              element={\n                <Boost\n                  count={count}\n                  moreClicks={moreClicks}\n                  priceMoreClicks={priceMoreClicks}\n                  levelMoreClicks={levelMoreClicks}\n                  moreEnergy={moreEnergy}\n                  priceMoreEnergy={priceMoreEnergy}\n                  levelMoreEnergy={levelMoreEnergy}\n                />\n              }\n            />\n            <Route\n              path=\"/task\"\n              element={<Task TgPremium={TgPremium} TgChannel1={TgChannel1} />}\n            />\n            <Route path=\"/link\" element={<RefLink userId={userId} />} />\n          </Routes>\n          <NavBar />\n        </Router>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}